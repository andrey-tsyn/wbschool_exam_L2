package main

import (
	"slices"
	"sort"
	"strings"
)

/*
=== Поиск анаграмм по словарю ===

Напишите функцию поиска всех множеств анаграмм по словарю.
Например:
'пятак', 'пятка' и 'тяпка' - принадлежат одному множеству,
'листок', 'слиток' и 'столик' - другому.

Входные данные для функции: ссылка на массив - каждый элемент которого - слово на русском языке в кодировке utf8.
Выходные данные: Ссылка на мапу множеств анаграмм.
Ключ - первое встретившееся в словаре слово из множества
Значение - ссылка на массив, каждый элемент которого, слово из множества. Массив должен быть отсортирован по возрастанию.
Множества из одного элемента не должны попасть в результат.
Все слова должны быть приведены к нижнему регистру.
В результате каждое слово должно встречаться только один раз.

Программа должна проходить все тесты. Код должен проходить проверки go vet и golint.
*/

func GetAnagrams(strs []string) map[string][]string {
	m := make(map[string][]string)

	for _, val := range strs {
		val = strings.ToLower(val)
		key := sortString(val)
		m[key] = append(m[key], val)
	}

	for key, val := range m {
		if len(val) < 2 {
			delete(m, key)
			continue
		}

		sort.Strings(val)
	}

	return m
}

func sortString(str string) string {
	runes := []rune(str)
	slices.Sort(runes)
	return string(runes)
}
